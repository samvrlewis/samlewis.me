<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Sam Lewis - Sam Lewis</title><link>https://www.samlewis.me/</link><description></description><lastBuildDate>Mon, 14 Mar 2022 00:00:00 +1000</lastBuildDate><item><title>Investigating Why Reorgs Happen in Proof of Stake Ethereum</title><link>https://www.samlewis.me/2022/03/beacon-chain-reorgs</link><description>&lt;p&gt;As part of my foray into learning about Ethereum, I started looking into the relatively new Proof of Stake supported &lt;a href="https://ethereum.org/en/upgrades/beacon-chain/"&gt;Beacon Chain&lt;/a&gt;. The Beacon Chain is the main coordinating blockchain for Proof of Stake Ethereum and is currently running with the equivalent (in ETH) of ~$25 billion USD staked!&lt;/p&gt;
&lt;p&gt;In …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Lewis</dc:creator><pubDate>Mon, 14 Mar 2022 00:00:00 +1000</pubDate><guid isPermaLink="false">tag:www.samlewis.me,2022-03-14:/2022/03/beacon-chain-reorgs</guid></item><item><title>Creating a mesh VPN tool for fun and learning</title><link>https://www.samlewis.me/2021/07/creating-mesh-vpn-tool-for-fun</link><description>&lt;blockquote&gt;
&lt;p&gt;tldr: I created a mesh VPN networking tool named &lt;strong&gt;meshboi&lt;/strong&gt; which you can checkout &lt;a href="https://github.com/samvrlewis/meshboi"&gt;on my github&lt;/a&gt;! This post walks through the 'magic' behind mesh VPN tools, using &lt;strong&gt;meshboi&lt;/strong&gt; as an example.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Mesh VPN tools, such as &lt;a href="https://github.com/slackhq/nebula"&gt;Nebula&lt;/a&gt;, &lt;a href="https://tailscale.com/"&gt;Tailscale&lt;/a&gt;, &lt;a href="https://www.zerotier.com/"&gt;Zerotier&lt;/a&gt; and &lt;a href="https://www.tinc-vpn.org/"&gt;Tinc&lt;/a&gt;, facilitate the creation of peer to peer (mesh …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Lewis</dc:creator><pubDate>Wed, 07 Jul 2021 00:00:00 +1000</pubDate><guid isPermaLink="false">tag:www.samlewis.me,2021-07-07:/2021/07/creating-mesh-vpn-tool-for-fun</guid></item><item><title>Forcing ethernet traffic onto physical interfaces</title><link>https://www.samlewis.me/2020/04/force-ethernet-loopback</link><description>&lt;p&gt;When you're working with a device that has two ethernet ports, it can be sometimes useful for hardware benchmarking or testing purposes to do a loopback test where one port connects directly to the other.&lt;/p&gt;
&lt;p&gt;&lt;img alt="ethernet loopback" src="/images/ethernetloopback.png"&gt;&lt;/p&gt;
&lt;p&gt;By default, and somewhat annoyingly, Linux is smart about routing traffic between ethernet adapters on …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Lewis</dc:creator><pubDate>Tue, 28 Apr 2020 00:00:00 +1000</pubDate><guid isPermaLink="false">tag:www.samlewis.me,2020-04-28:/2020/04/force-ethernet-loopback</guid></item><item><title>A peek under Bitcoin's hood</title><link>https://www.samlewis.me/2017/06/a-peek-under-bitcoins-hood</link><description>&lt;p&gt;Bitcoin is really cool. Sure, there's arguments to be made about whether it's a useful technology, whether we're currently in a cryptocurrency bubble or if the governance problems that it's currently facing will ever be resolved.. But on a purely technical level, the mystical Satoshi Nakamoto created an impressive technology …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Lewis</dc:creator><pubDate>Mon, 05 Jun 2017 00:00:00 +1000</pubDate><guid isPermaLink="false">tag:www.samlewis.me,2017-06-05:/2017/06/a-peek-under-bitcoins-hood</guid></item><item><title>Unit testing embedded code with cmocka</title><link>https://www.samlewis.me/2016/09/embedded-unit-testing-with-cmocka</link><description>&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Unit_testing"&gt;Unit testing&lt;/a&gt; is a great software testing practice that gets a lot of love in web and application development but unfortunately isn't practiced as often in embedded/firmware development. This is a shame as the impacts of having a bug in firmware can be considerably more catastrophic than having a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Lewis</dc:creator><pubDate>Mon, 26 Sep 2016 00:00:00 +1000</pubDate><guid isPermaLink="false">tag:www.samlewis.me,2016-09-26:/2016/09/embedded-unit-testing-with-cmocka</guid></item><item><title>Getting started with the xv6 operating system</title><link>https://www.samlewis.me/2016/04/getting-started-xv6</link><description>&lt;p&gt;xv6 is a nifty operating system that is essentially a reimplementation of &lt;a href="https://en.wikipedia.org/wiki/Version_6_Unix"&gt;Sixth Edition Unix&lt;/a&gt; that, unlike most of the huge montholithic Linux or BSD distributions that you'd run on your workstation or server, is simple enough to be used as a learning tool. Though xv6 lacks in functionality that …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Lewis</dc:creator><pubDate>Mon, 18 Apr 2016 00:00:00 +1000</pubDate><guid isPermaLink="false">tag:www.samlewis.me,2016-04-18:/2016/04/getting-started-xv6</guid></item><item><title>Startup Catalyst 2015: I'm off to Silicon Valley!</title><link>https://www.samlewis.me/2015/09/startup-catalyst-2015</link><description>&lt;p&gt;In just two short sleeps, I'll be jetting off to Silicon Valley as part of the &lt;a href="" title="http:/www.startupcatalyst.com.au/"&gt;Startup Catalyst&lt;/a&gt; program. The program was instigated by Australian entrepreneur/mentor/investor Steve Baxter (who is now a 'shark' on the Australian version of Shark Tank) and aims to expose a group of under …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Lewis</dc:creator><pubDate>Thu, 24 Sep 2015 00:00:00 +1000</pubDate><guid isPermaLink="false">tag:www.samlewis.me,2015-09-24:/2015/09/startup-catalyst-2015</guid></item><item><title>Using the MSP432 serial (eUSCI) modules</title><link>https://www.samlewis.me/2015/05/using-msp432-eUSCI</link><description>&lt;p&gt;As a follow up to &lt;a href="../msp432-serial-printf/"&gt;my post on MSP432 printf functionality&lt;/a&gt;, this is a write-up of my notes on using the serial modules on the MSP432. &lt;/p&gt;
&lt;p&gt;The MSP432 has two different types of serial modules; eUSCI_A modules and eUSCI_B modules. The eUSCI_A modules support both the UART and SPI protocols …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Lewis</dc:creator><pubDate>Sat, 23 May 2015 00:00:00 +1000</pubDate><guid isPermaLink="false">tag:www.samlewis.me,2015-05-23:/2015/05/using-msp432-eUSCI</guid></item><item><title>MSP432 serial printf</title><link>https://www.samlewis.me/2015/05/msp432-serial-printf</link><description>&lt;p&gt;While the &lt;a href="http://www.ti.com/lsds/ti/microcontrollers_16-bit_32-bit/msp/low_power_performance/msp432p4x/getting_started.page?paramCriteria=no"&gt;MSP432&lt;/a&gt;, does seem to be an kickin' rad microcontroller, I've noticed a distinct lack of resources online to do the most basic microcontrolley stuff.&lt;/p&gt;
&lt;p&gt;So this is a quick bit of code to get a serial/UART connection up and going from the MSP432 to your computer over …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Lewis</dc:creator><pubDate>Sun, 17 May 2015 00:00:00 +1000</pubDate><guid isPermaLink="false">tag:www.samlewis.me,2015-05-17:/2015/05/msp432-serial-printf</guid></item><item><title>AFL statistics SQL database</title><link>https://www.samlewis.me/2015/02/afl-stats-sql</link><description>&lt;p&gt;The AFL stats database (and some relevant code) is &lt;a href="https://github.com/samvrlewis/afl-stats-database"&gt;on github&lt;/a&gt;!
&lt;iframe src="https://ghbtns.com/github-btn.html?user=samvrlewis&amp;repo=afl-stats-database&amp;type=star&amp;count=true" frameborder="0" scrolling="0" width="170px" height="20px"&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;Download the SQL(ite) stats database here: &lt;a href="https://github.com/samvrlewis/afl-stats-database/raw/master/afl-stats.sqlite"&gt;afl-stats.sqlite&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The SQLite database has team statistics for each season and finals game for 1987-2014. In the earlier years not all stats are present as they were not all recorded. The …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Lewis</dc:creator><pubDate>Sat, 21 Feb 2015 00:00:00 +1000</pubDate><guid isPermaLink="false">tag:www.samlewis.me,2015-02-21:/2015/02/afl-stats-sql</guid></item><item><title>Automatically tracking my thesis progress</title><link>https://www.samlewis.me/2014/10/automated-thesis-tracking</link><description>&lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"&gt;&lt;/script&gt;

&lt;script src="https://www.google.com/jsapi"&gt;&lt;/script&gt;

&lt;script&gt;

  // onload callback
  function drawChart() {

    var public_key = 'zDaZOadL0XUKgVp5ojgV';

    // JSONP request
    var jsonData = $.ajax({
      url: 'https://data.sparkfun.com/output/' + public_key + '.json',
      data: {page: 1},
      dataType: 'jsonp',
    }).done(function (results) {

      var data = new google.visualization.DataTable();

      data.addColumn('datetime', 'Time');
      data.addColumn('number', 'wordcount');

      $.each(results, function (i, row) {
        data.addRow([
          (new …&lt;/script&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Lewis</dc:creator><pubDate>Fri, 03 Oct 2014 00:00:00 +1000</pubDate><guid isPermaLink="false">tag:www.samlewis.me,2014-10-03:/2014/10/automated-thesis-tracking</guid></item><item><title>Using C# to check if audio is playing in Windows</title><link>https://www.samlewis.me/2014/08/is-audio-playing-windows</link><description>&lt;p&gt;Using the &lt;a href="http://cscore.codeplex.com/"&gt;CSCore&lt;/a&gt; library (easily installed in Visual Studio with Install-Package CSCore) I was able to quickly knock up a prototype that let me check if audio was currently being played on my system.&lt;/p&gt;
&lt;p&gt;The code below is heavily inspired by audio meter code in the EndPointTests file for CSCore …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sam Lewis</dc:creator><pubDate>Tue, 05 Aug 2014 00:00:00 +1000</pubDate><guid isPermaLink="false">tag:www.samlewis.me,2014-08-05:/2014/08/is-audio-playing-windows</guid></item></channel></rss>